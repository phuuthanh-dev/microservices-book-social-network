version: "3.8"
services:
  kafka:
    container_name: kafka
    image: 'bitnami/kafka:3.7.0'
    ports:
      - '9094:9094'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

  ## Mongo Docker Compose Config
  mongo:
    container_name: mongo
    image: bitnami/mongodb:7.0.11
    restart: always
    ports:
      - "27017:27017"
    expose:
      - "27017"
    volumes:
      - ./mongo-data:/data/db

  ## MySQL Docker Compose Config
  mysql:
    container_name: mysql
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: identity_service
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql

  ## Neo4j Docker Compose Config
  neo4j:
    container_name: neo4j
    image: neo4j:5.1
    environment:
      NEO4J_AUTH: neo4j/12345678
    ports:
      - "7474:7474"  # Neo4j Browser HTTP
      - "7687:7687"  # Bolt protocol
    volumes:
      - neo4j-data:/var/lib/neo4j/data

  api-gateway:
    image: phuuthanh2003/api-gateway:latest
    container_name: api-gateway
    ports:
      - "8888:8080"
    expose:
      - "8888"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY= TRACE

  identity-service:
    container_name: identity-service
    image: phuuthanh2003/identity-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/identity_service
    depends_on:
      - mysql
      - api-gateway

  profile-service:
    container_name: profile-service
    image: phuuthanh2003/profile-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_NEO4J_URI=bolt://neo4j:7687
      - SPRING_NEO4J_AUTHENTICATION_USERNAME=neo4j
      - SPRING_NEO4J_AUTHENTICATION_PASSWORD=12345678
    depends_on:
      - neo4j
      - identity-service
      - api-gateway

  post-service:
    container_name: post-service
    image: phuuthanh2003/post-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mongo
      - api-gateway

  notification-service:
    container_name: notification-service
    image: phuuthanh2003/notification-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - kafka
      - mongo
      - api-gateway

  ## Prometheus
  prometheus:
    image: prom/prometheus:v2.37.1
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - identity-service
      - profile-service
      - post-service
      - notification-service

  grafana:
    image: grafana/grafana-oss:8.5.2
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    links:
      - prometheus:prometheus
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password

volumes:
  mysql-data:
  neo4j-data: